// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package RootElement;

import java.awt.Color;
import java.util.Random;

import javax.vecmath.Color3f;
import javax.vecmath.Vector3d;
import javax.vecmath.Vector3f;

import simbad.sim.EnvironmentDescription;
import simbad.sim.Box;
import simbad.sim.Wall;

/************************************************************/
/**
 * 
 */
public class Environment extends EnvironmentDescription {
	
	private Random rand = new Random(System.nanoTime());
		
	public void addWalls(){
		Color3f gray = new Color3f(Color.DARK_GRAY);
		Wall wx1 = new Wall(new Vector3d(-10, 0, 0), 20, 2, this);
        wx1.setColor(gray);
        wx1.rotate90(1);
        add(wx1);
      
		Wall wx2 = new Wall(new Vector3d(10, 0, 0), 20, 2, this);
		wx2.setColor(gray);
		wx2.rotate90(1);
		add(wx2);
		
		Wall wx3 = new Wall(new Vector3d(0, 0, 10), 20, 2, this);
		wx3.setColor(gray);
		add(wx3);
		
		Wall wx4 = new Wall(new Vector3d(0, 0, -10), 20, 2, this);
		wx4.setColor(gray);
		add(wx4);
      
	}
	
	public void addObstacles(){
		for(int i =0; i<4;i++){
        	Box box = new Box(new Vector3d(rand.nextInt(18) - 9, 0, rand.nextInt(18) - 9), new Vector3f(1, 1, 1) , this);
        	box.setColor(new Color3f(Color.green));
        	add(box);
        }
		
        for(int i =0; i<4;i++){
        	Box box = new Box(new Vector3d(rand.nextInt(18) - 9, 0, rand.nextInt(18) - 9), new Vector3f(1, 1, 1) , this);
        	box.setColor(new Color3f(Color.blue));
        	add(box);
        }
	}
	
	public void addTargets(){
		for(int i =0; i<4;i++){
        	Box box = new Box(new Vector3d(rand.nextInt(18) - 9, 0, rand.nextInt(18) - 9), new Vector3f(1, 1, 1) , this);
        	box.setColor(new Color3f(Color.red));
        	add(box);
        }
	}
	
	public Environment(){
		// turn on the lights
	    this.light1IsOn = true;
	    this.light2IsOn = true;
	    
	    // enable the physics engine in order to have better physics effects on the objects
	    this.setUsePhysics(true);
	    
	    // show the axes so that we know where things are
	    this.showAxis(true);
	    this.addWalls();
	    this.addObstacles();
	    this.addTargets();
	}

};
